generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Product {
  id            String      @id @default(uuid())
  category      String
  title         String
  description   String
  imageUrl      String?
  price         Decimal
  stockQuantity Int         @default(0)
  isArchived    Boolean     @default(false)
  reviewRating  Decimal     @default(0)
  reviewCount   Int         @default(0)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  OrderItem     OrderItem[]

  @@index([isArchived])
  @@index([category])
  @@index([title])
  @@map("products")
}

model Customer {
  id        String   @id @default(uuid())
  phone     String   @unique
  firstName String
  lastName  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]

  @@index([phone])
  @@map("customers")
}

model Order {
  id          String      @id @default(uuid())
  orderNumber BigInt      @unique @default(autoincrement())
  customerId  String
  totalAmount Decimal
  note        String?
  createdAt   DateTime    @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime    @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  items       OrderItem[]
  customer    Customer    @relation(fields: [customerId], references: [id], onDelete: NoAction)

  @@index([createdAt(sort: Desc)])
  @@index([customerId, createdAt(sort: Desc)])
  @@map("orders")
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  unitPrice Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [id], onDelete: NoAction)

  @@index([orderId])
  @@index([productId])
  @@map("order_items")
}
